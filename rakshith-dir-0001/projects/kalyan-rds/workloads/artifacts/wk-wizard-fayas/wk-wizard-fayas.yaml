apiVersion: v1
data:
  tls.crt: 
  tls.key: c2VjcmV0c3RvcmU6cmttczo1REpLVDhwazhITlJQcHIvR1NHcU9BK0l2MytadUg5TlhKUWQ1MDZRYlpnS0hOVGNFajd0aUdhUGFpdGplU0pCNFo4SmdwV3dWRzdlcWhnUmFkL09ZdWd5eitXV2t6Um9CQlMzU2xUUTBUa0EyRnp2UzUxeXN1cUZPRXR1ZHBYdWpYcFM2RlRmZitOWlZ0SXV5dGVnODFwNTZBNE9sd3JDeStwUmlkSTZRUkJNVkxScHlSS3o3OHUwWUoyeVlKTjlVUW5wYytBV0ZqRlIyNEhIRzhvWGYwamFRUERYV3g0UTA1cVNEUE52cWVoNHBQdlVMU2lGUytralR2eEUzbmdLOEdiR1NDd2RTOVdrd3IxZGI5YVZneFZYWFRvcTJNcmtTOWJZOFBFMmZMcHRyZ0VUS1JnZnc3MTdHWDZqWU1XSzRZd1JGM01RZFhyNkJ0OGsra3lQN004cnVhbXhuNExMdVlxckRxRmh2MVpyaE41VE9HTUdXNWZ1a0RMT09ZUGhmeGhRR0JhR0JoNS9kWExLbko0cE43UFVqR2hFbzFRYWVmQzY1MVIwUkVNd2hrSkVQR1RqM2wydktRRVIrNmVYVGVLa2RrRk5ab0NqbWRyY2F5ekpGeVJiWEhqb1c5UVNIUUFpdTZiSTlzYjRjeXFEbVFLZG90RHJibThIZnh5TDJOaWFvbmR3SHptZnVQUzVTMUR0QTN3blFpdFdTb0o1WlJJOVRlajZ4MTdjZHlNZkNVYnhxd0lqMlgyYlBDN2F1b2VRU1dtZElORXhwRGVmVitlTWRMMi9ad3oyMlVoazBWWUJscnlFU004MHRCTDN1TEpwb0xyaWtvRXdLRExrSnJqSUlaaFovZHVaRU82aEF4RklEZ3J5Mk9mR2RML1ZVblRMVWV1WFhBenAzWlMwbzRnSkkrTXdTM0FjT2R5aDhPQnhRNnFkRGxLWVJuWmdQS3RqeGRLSjZVaEQxd21vOUVTSVJQOWVXcTR0K1RLSUw4cnNDdURiT0lUL2VFUmpvWUZEWWJPdVZDTFQrN3I4ZEx1a2IxR2hFeUJWbUtsN2o1eDJpQWM4bWl5UjhCeS9WNVNFUTNXRlBBK0RMQ0ZWb3NDTkwvcWx4bmgwWVIxclg5aFdiRG0yVGFEZ21jSXBsM0FZZ29IcEhzekxaQ0tkOHhmK2Q3TUVDaTJZKzdQRkpSOGFvcEtmaTZhRUY1UW5peXpuVk9tZHk3cDNCUnRnNXp5MDNzK2tNZGNBcGcyZklNS3UxcHpjem00YnJUdFVEYXNTcmRyd0pxd1BYWkM4WFRxb2IyMkFqRklJY1UvZUlFZm5Sa0FHWHJhRklTSkk1QUFYUWduWkVGQ0o3dTIvNVo1bnNaa3lNSk9EUUxQMENmVFBFajZoTjcrdVFCbzNjRkFNRThwU3dFMmVyeFpoYUNtdVFsdC95Qnc0TXlNZkI4UkQwK05Ec3VNYW9PMlNDK2lHTFJKU1RvcThTcGxuWitDdUN0MUdFdDZrNEhWN0ovK3ZrSlhrcmd1ZjEzMWlQOFcvY0h3MmJZSCtHdmZQeHhyQjhyMDlETTArenlLZ1kvV0x6WFBYeEhZQzBYMmZGZVNCMjRQeUJGaUhoREVzV2tLVTI0ZW9XSWlZY0JHYTNQbU5GOWdpNERqTGpDTU1nMHhqQmdvaXBQM3p2WDNZOHZwaGpyWEc3Mms5bk5NUlF1b2psZjg3YUZPd3loRW1NUlVzNFYyR1NEeEQrWm1Jc2NBaTlhVjFBZkdjSnJpQ1pOcEpVN3dVMU9HUnB6dTdNMTlTSmtTOXBqWXg0dUlqRUxVWlRLUXZlRVJhL3B3a2NlM1ZXY3JqcFZ3MzBLMkNaN2dkQ2lSVHpDODg4bHZzNEI4ZnVIb1dXMVdCQWJKNzdpY0Y3Yk14OFhNZ0dlUEdra3pNbFk0UTgwVlN5Q2N5OExGMDBLWkRpdTl5UHIvL3JaZU1NOXVkdHdzWTJnSnBFbWc2ZzdYQlFXRjBaWTVjd0Y2UnN3R0VRcWkzWlR3U2o4ZnNBN2xvMUpUbVdMS0U4SGE2TTFrdExNeFVzRkUrME1RcncwdXJSdm9qRTM4bWhGMFNxbGFWeU1aVGxqdGNyS3hZUkdvRW9iWThqTFZ1ODBBVWdHenBUc0tCR050dTdhOHl2ckRKVWF3VXJCMjlYZnIwdlF1TzM0bkdIOHc4bjdVem9DcmdsU1BSTHhFRFU1TjFlaFBLb3VCc0NIeVI4anB4SDJ5MnFMVUZjOHBrcnJEZk9FOUZ6VGYzaDdTdmFLLzV3YUtjbFhtM0lHZDVwbUlucHhJMDJHcHcrbzhmbnMwcWluMnVBdXh0QXpoWFY4Nk9qbWE0cnd2MmhlMmZvd1pZWnFYTGh6blJhc01vMUp4WERwSktodlk2WHZRaFpuL3JWV2FMZmxhOE5aL1pMTVV6OEdtdjJFazgwWkdlanhnUWpHRG1laEY4R2RzT3NmZGhUT2thWkxLa3pnc3U3bFAwNFd4Z1ZsRHYvdkVNc0RraHk1S2xwTFdHMjJoNjYzcWlwcmxUY1htRnVKeUNIUGJ5WWxCSW42a0h6Y2VnM1U5MS9HNUpHYTJrenR3Y1JLbHFNb3hYcGRnSnA3RjhxTmN6SWtOcmJLY3lHcHMrYlBVMmV5ZDZUWU9McXRWUG04eXFRU1llcXFNdlYrSENkUW00WkZvUzRVOS9NS3hLTTUvT1daaHhGUHVWS3dKQngxZVhCcDNuakd4Q0tMYTZpME9rR0tibjlTa1pLeitlYmE3UEZLRmZMOW9MaExkcVlXT0VVa0lxQ0hBMjBIMy9nazkyYVA0bDZGd0dnL1p2WnFXWHlyamQ4dHdDN3ZPMDhGVUdRUjlsQmd6YkQrZTVaUlkzS2sraHhEbDAwS0ZIMjJVbTZuMk4ralNsM3NvNUpWR1BtNjQrUEZkcStoN2FWUU1FMGpaNUVZTlIrdUZVR0NDUlhUVVJ0WTkyMFVLcVpKbWpPa3JqdUV0alRQcFZCYW1IOE05RWVqajJKekVzK2NEUlFRdE8yWDdBWlFYTVpXcUhhNHZ2UjRZd3FBalQweXN6WndWSmdMT2hxYkdYM1ZuZ0I3MVpkVytxclk5SHNkZWNtLzVZUnhKbUJyZmxoeW1YdWpSejdQUDF0ZUQ4aEpKbDNOaDVsaWFmVW5Ka2tDM1ZEbWRzNzR2NXBUckVqTnlzS2xRT0VRZ0I2Mzh0azhDSmhKd1FwUDUydFhuTVR6YVJPcDVGMXdSdG1rdmNtYWZSSDM5bmp2ZlEvOXhXMHFVT2M3S3dKMjU5RVhTZEhoZVdaVXhoYWpkaEsyUXppUWVPNHV0SzlreEhVZVo1YVBidUtFWVN0Vm41enY3TjluTXNYaWQrNXBoMWF2VnJIdHB5UjM2TFRTMlArNWRvMnNtcVh6anUzakljV041aUg1WEVucmttMnV2YUExYXJGN05NMTNEU3FVRXdJemVsdnk4UTg5ODJJd05ZRTlXRm5QN1pmRUUvVkgzcE5lKzc2TkhFcW0zTGd0MnZRd0FwbFBVUFN4NHFsbUlFK3BsQVFCc1lncGpsak11MXIrV3RiczZXa1d6dFFYTFQ4ZlU3eWVvdm9iS3dLQ3gva0YxOHorRHo5Njl0bEVjRFBTWWxYT0Rzck95bVArNFdLQi8zYnVjVjZLZHE4NU1Renc4QnBkMTUwNHlISUFQZWVPQXZkaXlyS1VTVnRyMDdwQ2hZZmU0dEhUdDd6aHBiSHFMMm42bVFCbmh6NkwxRm1zY0w3WTNGU0NuZ3AyTmhlYkhzTHJVNGFScjl4RVpTZGVZZVdaYkxCR3dYS05PSGkwVGZCYnQ1L0pWTmdqNk05cVhaZ202OG9SNEVMemhQVE5oZlZKUExmclc2V3kxS2tKb202cjlia0Vtd2xHMHNoYXdoSVFZSmo0UnJEUEdsOHNDMWRjdUZ3NHdncEM0Y1dxbTdtRmpEWmg1Ry9LdG5aMFdEZGRVV3dhdzgzMk1JRklqL25JTE54aDNyK0tBRnpFUDZDOGZHNUlvN1cvanBrZVZxTVhvZHlnQ1NkTWIvWDR1OXdqVVBydWdITWlIZDNLSHdBUTZONVM2U1ZSZUxNREpXNVZ4c0RGalBpZUtSZjhRN3VsRENTd0VKaXplL0M3ZWhicnpxNVIxU0g5eDdtS1Q2UnZTckZ3T2VTLzlqSlBPdGxFVjg4VERPZTZVa1FTZWEwUXdCLzV0K3NlaDRIaGVxTlFCRmVwaVVvWlNiNFByaXVxK0t6RkNVSWxlczJ1OG9Ia0h3S2YrWWgvdW1kSmZGUmdYMFB6dURHclRBVTJZN2tRRFJjMTJFY0cxdGJXL2NXYllqa3BNSDZ3bnNjOWZPMHBlUjE4aXFGSUUxak8vN08wTFk2RG5NWUNQdWl6dGJ3bFdzell2WmRXRHhYamhmZm1nZDdoUS8xV2tLamZUTjNQNTV3MUR5NEU5VnBxV0Q5K0VJckhlS2VlMGxGSWdzU3FGaVNXd21BSndWQzZYbkZUU2dHRDZxV1pqdzJjQ25lRmR5UUdjNnRER1FQR2xmSm5SNHIyTW5LdUNVYUdVY2UxNGI4dFM3cm85N1A4NFh1RkF4akJ0UzR6TCsxV2YzSzVjMHhiYTd0SmtiTG5iMU1VVVdNdmt5ZUhnZENwMURocnMybVZrenEzSU1PK3dmYXExZTViQXJpMFpQc2xkTDlGSjJsWjIyYVg4Y09ZdDBiSk5MTTNJSWpXMUdlK0dCeEJ4YjFTenZYVVJ3YlozR1c3bmY1elJyeG9zc2I4Vm1aRkU0ZWpUTWFaVDJrWER5Y0RjUjRRTVh0OEFyUjVLVU9TVGpFaDhrVFFIY3ZJS2JydFowZjBWTkIyUXo0VUlqVzF5LzY2aWExQkFlczlERGVoQjFnejlEcGJvM0hwVHdxeERvajFGNWs3SmNPeHd6b2syeHozWEprN2xnY2hxUlFha1dxMFMvRVlDSzhsOU5QNGpJa2RiYzdLQkdWSi9kbS9Wbm5IMS9sRndYamlkMEsvZmJETzR5VUJsbFhITWp2U0VVNDMvZDQ0TWZKQlMvckJremFaSFhQNitZazdDVHd6Y3BJR3ZWUFgwVXV4L2NFeVRMcjJaTXljb2lNOUFPVWJlMFdmOEpzT3owa0k0Um5tQ09Da2plNzg4YzliWnh6b2tnSlFXVXh0Vm5mV0wvNkV6NzJLSTczRDJNeHR0V2JlUEFqcEF4ZkFTY3hZL0JLSURpWHRMM0gxaDBpRmRMOXVjc0Ric3JlRDNkZmJwL1Z2WmIxdndCQXFNMnZPVXJmd2F0S1RvVXpxZ1B3bURtcy84OTZsbm9OZnRrazV6bEJxYk5JMnorWlA2cFQyQmRDMkxtTmpsWXRTNGh6aDIveFRRd0FVcTI4L2JINFVsZXdwUjVmR3B6V2ZpSnR5VXcveXA1Y1NaOGNHSEpoSjJWaTlzWFUzWWUxNGtIUmJNKzRBcElPTm9pQndnc2QxV0F0K3MvZzJlSGs3UjF5SytnM0JiTzFsNDg2UjA3dStxNWhzSVVpb3p1TkRmZi9JQnRrWDlrcVRPa0cvQmtxV2hNYnBOOGVheVJYRzJ2OXlnd0hzdk43M25ZdHR5K2tnbm1HQjdkSHJrcWxSZlRRSXhnRFRmU0tWR0l3YURSa1VVY2IzV2QwYzUvOEwrZEtYUVUvYWVTTnZwM253OFJwd2RkYWlKcGxqSngxZEtvZThIbElmVWRaL1ZJTGEyT0JadkZyK3VnSVk3MDRtdnFuTHhrR0pFNVYrbUVjdC80bEFHaVFEL3NzbUxKSWNycXJ5Sm9aVVNyV3c9PQ==
kind: Secret
metadata:
  annotations:
    rafay.dev/secretstore: rkms-secrets
  labels:
    rep-organization: 7w2lnkp
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: kr903rk
  name: kr903rk-testaws2-3781258604-ingress
  namespace: fayas-ns
type: kubernetes.io/tls

---
apiVersion: v1
kind: Service
metadata:
  labels:
    rep-container: kr903rk-testaws2
    rep-organization: 7w2lnkp
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: kr903rk
  name: testaws2
  namespace: fayas-ns
spec:
  ports:
  - name: port-80-tcp
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    rep-app: testaws2
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    rafay.dev/registry-pk04y52: system-default-registry
  labels:
    rep-app: testaws2
    rep-organization: 7w2lnkp
    rep-partner: rx28oml
    rep-workload: kr903rk
  name: testaws2
  namespace: fayas-ns
spec:
  minReadySeconds: 10
  progressDeadlineSeconds: 300
  selector:
    matchLabels:
      rep-app: testaws2
  strategy:
    type: Recreate
  template:
    metadata:
      annotations: {}
      labels:
        rep-app: testaws2
        rep-organization: 7w2lnkp
        rep-partner: rx28oml
        rep-workload: kr903rk
    spec:
      containers:
      - args: []
        command: []
        env: []
        envFrom: []
        image: rcr.stage.rafay-edge.net/rafaycommunity/rafaycommunityuser/testapp:v2.0
        imagePullPolicy: IfNotPresent
        name: testaws2
        ports:
        - containerPort: 80
          name: port-80-tcp
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 1024Mi
          requests:
            cpu: 237m
            memory: 972Mi
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      tolerations: []

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/configuration-snippet: set $workload_name "wk-wizard-fayas";set
      $workloadId "kr903rk";set $orgId "7w2lnkp";set $partnerId "rx28oml";
    rafay.dev/dns: 'true'
    rafay.dev/kubeVersionConstraint: '>=1.19.0'
  name: kr903rk-testaws2-http
  namespace: fayas-ns
spec:
  rules:
  - host: testaws2.run.dev.rafay-edge.net
    http:
      paths:
      - backend:
          service:
            name: testaws2
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - testaws2.run.dev.rafay-edge.net
    secretName: kr903rk-testaws2-3781258604-ingress

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/configuration-snippet: set $workload_name "wk-wizard-fayas";set
      $workloadId "kr903rk";set $orgId "7w2lnkp";set $partnerId "rx28oml";
    rafay.dev/dns: 'true'
    rafay.dev/kubeVersionConstraint: <1.19.0
  name: kr903rk-testaws2-http
  namespace: fayas-ns
spec:
  rules:
  - host: testaws2.run.dev.rafay-edge.net
    http:
      paths:
      - backend:
          serviceName: testaws2
          servicePort: 80
        path: /
  tls:
  - hosts:
    - testaws2.run.dev.rafay-edge.net
    secretName: kr903rk-testaws2-3781258604-ingress
